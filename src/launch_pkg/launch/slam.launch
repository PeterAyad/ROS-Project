<?xml version="1.0"?>
<launch>

	<!-- <node pkg="teleoperation" type="teleoperation_node.py" name="teleoperation_node" output="screen"></node> -->
	<node pkg="slam" type="slam.py" name="slam_node" output="screen"></node>


	<node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
		<param name="destination_frame" value="robot_odom"/>
		<param name="cloud_destination_topic" value="/merged_cloud"/>
		<param name="scan_destination_topic" value="/scan_multi"/>
		<param name="laserscan_topics" value ="/robot/front_laser/scan /robot/rear_laser/scan" /> <!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->
		<param name="angle_min" value="-180"/>
		<param name="angle_max" value="180"/>
		<param name="angle_increment" value="0.008726666681468487"/>
		<param name="scan_time" value="0.0"/>
		<param name="range_min" value="0.10000000149011612"/>
		<param name="range_max" value="30.0"/>
	</node>

	<!-- SUMMIT XL STEEL-->
	<!-- disables gazebo ros_control plugin -->
	<arg name="omni_drive" default="true" />
	<arg if="$(arg omni_drive)" name="ros_planar_move_plugin" value="true" />
	<arg unless="$(arg omni_drive)" name="ros_planar_move_plugin" default="true" />
	<arg name="ros_planar_move_plugin_force_based" default="false" />
	<!-- Gazebo specific options -->
	<arg name="gazebo_gui" default="false" />

	<!--launch_navigation and launch_navigation_nomap args are exclusive
	and they are (or not)
	launched for all robots-->
	<arg name="launch_rviz" default="true" />
	<arg name="gazebo_world" default="$(find summit_xl_gazebo)/worlds/summit_xl_office.world" />
	<arg name="launch_advanced_simulation" default="false" /> <!-- Just for internal use -->
	<arg name="use_gpu_for_simulation" default="$(optenv USE_GPU_FOR_SIMULATION false)" />

	<!-- common arguments -->
	<arg name="default_xacro_package" default="$(optenv ROBOT_XACRO_PACKAGE summit_xl_description)" />

	<!-- arguments robot a -->
	<arg name="launch_robot_a" default="true" />
	<arg name="map_file_a" default="empty/map_empty.yaml" />
	<arg name="gmapping_robot_a" default="false" />
	<arg name="move_base_robot_a" default="true" />
	<arg name="amcl_and_mapserver_a" default="true" />
	<arg name="xacro_robot_a" default="$(optenv ROBOT_XACRO summit_xls_std.urdf.xacro)" />
	<arg name="launch_pad_a" default="false" />
	<arg name="has_pantilt_camera_a" default="false" />

	<!-- arguments robot b -->
	<arg name="launch_robot_b" default="false" />
	<arg name="map_file_b" default="willow_garage/willow_garage.yaml" />
	<arg name="gmapping_robot_b" default="false" />
	<arg name="move_base_robot_b" default="false" />
	<arg name="amcl_and_mapserver_b" default="false" />
	<arg name="xacro_robot_b" default="summit_xls_std.urdf.xacro" />
	<arg name="launch_pad_b" default="false" />
	<arg name="has_pantilt_camera_b" default="false" />

	<!-- arguments robot c -->
	<arg name="launch_robot_c" default="false" />
	<arg name="map_file_c" default="willow_garage/willow_garage.yaml" />
	<arg name="gmapping_robot_c" default="false" />
	<arg name="move_base_robot_c" default="false" />
	<arg name="amcl_and_mapserver_c" default="false" />
	<arg name="xacro_robot_c" default="summit_xls_std.urdf.xacro" />
	<arg name="launch_pad_c" default="false" />
	<arg name="has_pantilt_camera_c" default="false" />

	<include file="$(find summit_xl_gazebo)/launch/summit_xl_gazebo.launch">
		<!-- general args -->
		<arg name="launch_rviz" value="$(arg launch_rviz)" />
		<arg name="gazebo_gui" value="$(arg gazebo_gui)" />
		<arg name="gazebo_world" value="$(arg gazebo_world)" />
		<arg name="omni_drive" value="$(arg omni_drive)" />
		<arg name="ros_planar_move_plugin" value="$(arg ros_planar_move_plugin)" />
		<arg name="ros_planar_move_plugin_force_based"
			value="$(arg ros_planar_move_plugin_force_based)" />
		<arg name="launch_advanced_simulation" value="$(arg launch_advanced_simulation)" />
		<arg name="use_gpu_for_simulation" value="$(arg use_gpu_for_simulation)" />
		<arg name="default_xacro_package" value="$(arg default_xacro_package)" />
		<!-- robot_a args -->
		<arg name="launch_robot_a" value="$(arg launch_robot_a)" />
		<arg name="map_file_a" value="$(arg map_file_a)" />
		<arg name="gmapping_robot_a" value="$(arg gmapping_robot_a)" />
		<arg name="move_base_robot_a" value="$(arg move_base_robot_a)" />
		<arg name="amcl_and_mapserver_a" value="$(arg amcl_and_mapserver_a)" />
		<arg name="xacro_robot_a" value="$(arg xacro_robot_a)" />
		<arg name="launch_pad_a" value="$(arg launch_pad_a)" />
		<arg name="has_pantilt_camera_a" value="$(arg has_pantilt_camera_a)" />
		<!-- robot_b args -->
		<arg name="launch_robot_b" value="$(arg launch_robot_b)" />
		<arg name="gmapping_robot_b" value="$(arg gmapping_robot_b)" />
		<arg name="move_base_robot_b" value="$(arg move_base_robot_b)" />
		<arg name="amcl_and_mapserver_b" value="$(arg amcl_and_mapserver_b)" />
		<arg name="map_file_b" value="$(arg map_file_b)" />
		<arg name="xacro_robot_b" value="$(arg xacro_robot_b)" />
		<arg name="launch_pad_b" value="$(arg launch_pad_b)" />
		<arg name="has_pantilt_camera_b" value="$(arg has_pantilt_camera_b)" />

		<!-- robot_c args -->
		<arg name="launch_robot_c" value="$(arg launch_robot_c)" />
		<arg name="gmapping_robot_c" value="$(arg gmapping_robot_c)" />
		<arg name="move_base_robot_c" value="$(arg move_base_robot_c)" />
		<arg name="amcl_and_mapserver_c" value="$(arg amcl_and_mapserver_c)" />
		<arg name="map_file_c" value="$(arg map_file_c)" />
		<arg name="xacro_robot_c" value="$(arg xacro_robot_c)" />
		<arg name="launch_pad_c" value="$(arg launch_pad_c)" />
		<arg name="has_pantilt_camera_c" value="$(arg has_pantilt_camera_c)" />

	</include>


</launch>